from moduly.loader import wczytaj_csv
from moduly.filtracja import filtruj_trasy
from moduly.statystyki import srednia_temp, suma_opadow, liczba_dni_slonecznych

def pogoda_dla_regionu(pogoda, region):
    return list(filter(lambda d: d['region'] == region, pogoda))

# Wczytanie danych
trasy = wczytaj_csv('dane/trasy.csv')
pogoda = wczytaj_csv('dane/pogoda.csv')

# --- Interaktywny wybÃ³r regionu ---
dostepne_regiony = sorted(set(trasa['region'] for trasa in trasy))

print("DostÄ™pne regiony tras:")
for r in dostepne_regiony:
    print(f" - {r}")

region_docelowy = input("\nWpisz nazwÄ™ regionu, ktÃ³ry CiÄ™ interesuje: ").strip()

if region_docelowy not in dostepne_regiony:
    print(" Podany region nie istnieje w danych.")
else:
    # --- Trasy w regionie ---
    wybrane_trasy = filtruj_trasy(trasy, region=region_docelowy)
    print(f"\nâœ… Wybrane trasy w regionie: {region_docelowy}")
    for t in wybrane_trasy:
        print(f"""
        â€¢ Nazwa: {t['nazwa']}
        â€¢ DÅ‚ugoÅ›Ä‡: {t['dlugosc_km']} km
        â€¢ TrudnoÅ›Ä‡: {t['trudnosc']}
        â€¢ PrzewyÅ¼szenie: {t['przewyzszenie']} m
        â€¢ Teren: {t['teren']}
        â€¢ Lokalizacja: {t.get('lokalizacja', 'brak danych')}
        """)

    # --- Pogoda dla regionu ---
    pogoda_region = pogoda_dla_regionu(pogoda, region_docelowy)

    print(f"\nðŸ“Š Statystyki pogodowe dla regionu: {region_docelowy}")
    print(f"Åšrednia temperatura: {srednia_temp(pogoda_region):.2f}Â°C")
    print(f"Suma opadÃ³w: {suma_opadow(pogoda_region):.2f} mm")
    print(f"Liczba dni sÅ‚onecznych: {liczba_dni_slonecznych(pogoda_region)} dni")